const temp={Array:[],String:""},fn_init=e=>{let r=[];for(let t=0;t<e.length;t++)r[r.length]=e[t];return r},fn_gate=(t,e)=>{if(t===temp.Array)throw new Error("Store initialization was unsuccessful!\nStore must be an array!");e(t)},__body=(t,e,r)=>{if(t){if("string"==typeof t)return r.split(t);if("number"==typeof t)throw new Error("Sperators has not be a number.\nSeparator must be a array");return"array"==typeof t||"object"==typeof t?e(t):t}throw new Error("Sperators has not be empty.\nSeparator must be a array")},__function=(o,i)=>{temp.Array;var t=fn_init(o[0]);fn_gate(t,r=>{let n=r;for(let e=0;e<o[1].length;e++)for(let t=0;t<r.length;t++)o[1][e]===n[t]&&(n[t]="");let e="";for(let t=0;t<n.length;t++)e+=n[t];for(let t=0;t<e.length;t++)i(e[t],t)})},__trim=e=>{if("array"!=typeof e&&"object"!=typeof e)throw new Error("Argument has to be type of array");for(let t=0;t<e.length;t++)e[t]=e[t].trim()},LAYOUT={body:__body,trim:__trim,function:__function};function FutureReplaceMethod(t,e){return[t,e,"Function in development"]}function FutureSplitMethod(e){return LAYOUT.body(e,t=>{let r=[],n="";return LAYOUT.function([this,e],(t,e)=>{n=" "==t||+e==t.length-1?(r.push(n+t),""):n+t}),LAYOUT.trim(r),r},this)}function fn_asArray(){return this}function fn_asString(t){let e="";if(!0===t)for(let t=0;t<this.length;t++)e+=this[t];else for(let t=0;t<this.length;t++)e+=this[t]+" ";return e}Object.prototype.asArray=fn_asArray,Object.prototype.asString=fn_asString,String.prototype.steroid_split=FutureSplitMethod,String.prototype.steroid_replace=FutureReplaceMethod,console.log("Hi, I am an example string. And I have an example sentence".steroid_split([",","."]));
//# sourceMappingURL=steroid-js.dev.min.map.js